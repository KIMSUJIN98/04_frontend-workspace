uml은 모델링언어로 소프트웨어 개념을 다이어그램으로 그리기 위해 사용하는 표기법으로, 복잡한 프로그램을 도식화하여 표현할 수 있고 의사소통하기 좋다는 장점이 있다.

동적다이어그램으로 분류되는 시퀀스다이어그램, 유스케이스다이어그램, 활동다이어그램 그 반대인 패키지다이어그램, 클래스다이어그램이 있다.

유스케이스 다이어그램은 시스템과 상호작용하는 사용자, 다른 시스템을 의미하는 “액터”와 그 시스템이 수행하는 작업인 “유스케이스”, 액터와 유스케이스 사이 의미있는 관계인 “관계”로 구성된다.

액터와 상호작용하는 관계를 실선으로 표시하는 “연관관계”, 기능 수행 이전에 반드시 수행되야하는 include ”포함관계“, 추가 기능 extend “확장관계”, 유사 기능을 그룹핑하여 이해를 높이는 “일반화관계”가 있다.

DB 설계방법 : 개념, 논리, 물리 모델링

DB(모델링용어) : 테이블(엔티티), 컬럼(속성), 행(인스턴스), 기본키(주식별자), 외래키(외래식별자)
- 속성 : 엔티티에서 관리해야할 최소단위 정보 항목
- 인스턴스 : 엔티티의 속성으로 실제 구현된 값
- PK(주식별자) : 엔티티 내 각 인스턴스를 구별하는 기준이 되는 속성
- FK(외래식별자) : 관계가 있는 엔티티 간 연결고리 역할을 하는 속성
- 엔티티 : 업무의 관심대상이되는 사물이여야 하고, 마땅한 속성을 소유하며 두개 이상의 인스턴스를 소유해야 한다.
- 속성 명명규칙 : 의미가 분명하고 해당업무에서 사용하는 이름을 부여하며, 서술식이나 약어를 사용하지 않고 엔티티에서 유일하게 식별 가능하도록 지정한다.
- 식별관계 : 외래식별자가 주식별자의 일부가 되는 관계 (회원,상품-찜)
- 비식별관계 : 외래식별자가 단순 속성으로 추가되는 관계 (회원,상품-리뷰)

일대 다 관계 : 하나의 게시글은 여러개의 댓글을 가질 수 있다.
